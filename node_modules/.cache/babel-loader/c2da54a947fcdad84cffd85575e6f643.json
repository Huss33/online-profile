{"ast":null,"code":"import _slicedToArray from\"C:/Users/ahuss/OneDrive/Desktop/react-hw/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{validateEmail}from'../../utils/helpers';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function Contact(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),name=_useState4[0],setName=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),textInput=_useState6[0],setTextInput=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),errMsg=_useState8[0],setErrMsg=_useState8[1];var handleInputChange=function handleInputChange(e){var target=e.target;var inputType=target.name;var inputValue=target.value;if(inputType==='email'){setEmail(inputValue);}else if(inputType==='name'){setName(inputValue);}else{setTextInput(inputValue);}};var handleFormSubmit=function handleFormSubmit(e){e.preventDefault();if(!validateEmail(email)||!name){setErrMsg('Email or name is invalid');return;}alert(\"Hello \".concat(name));setName('');setEmail('');setTextInput('');};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Hello \",name]}),/*#__PURE__*/_jsxs(\"form\",{className:\"form\",children:[/*#__PURE__*/_jsx(\"input\",{value:email,name:\"email\",onChange:handleInputChange,type:\"email\",placeholder:\"email\"}),/*#__PURE__*/_jsx(\"input\",{value:name,name:\"name\",onChange:handleInputChange,type:\"text\",placeholder:\"name\"}),/*#__PURE__*/_jsx(\"input\",{value:textInput,name:\"textInput\",onChange:handleInputChange,type:\"textInput\",placeholder:\"textInput\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleFormSubmit,children:\"Submit\"})]}),errMsg&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{className:\"error-text\",children:errMsg})})]});}export default Contact;","map":{"version":3,"sources":["C:/Users/ahuss/OneDrive/Desktop/react-hw/src/components/pages/Contact.js"],"names":["React","useState","validateEmail","Contact","email","setEmail","name","setName","textInput","setTextInput","errMsg","setErrMsg","handleInputChange","e","target","inputType","inputValue","value","handleFormSubmit","preventDefault","alert"],"mappings":"8HAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAASC,aAAT,KAA8B,qBAA9B,C,wFAEA,QAASC,CAAAA,OAAT,EAAmB,CACjB,cAA0BF,QAAQ,CAAC,EAAD,CAAlC,wCAAOG,KAAP,eAAcC,QAAd,eACA,eAAwBJ,QAAQ,CAAC,EAAD,CAAhC,yCAAOK,IAAP,eAAaC,OAAb,eACA,eAAkCN,QAAQ,CAAC,EAAD,CAA1C,yCAAOO,SAAP,eAAkBC,YAAlB,eACA,eAA4BR,QAAQ,CAAC,EAAD,CAApC,yCAAOS,MAAP,eAAeC,SAAf,eAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,CAAD,CAAO,CAC/B,GAAQC,CAAAA,MAAR,CAAmBD,CAAnB,CAAQC,MAAR,CACA,GAAMC,CAAAA,SAAS,CAAGD,MAAM,CAACR,IAAzB,CACA,GAAMU,CAAAA,UAAU,CAAGF,MAAM,CAACG,KAA1B,CAEA,GAAIF,SAAS,GAAK,OAAlB,CAA2B,CACzBV,QAAQ,CAACW,UAAD,CAAR,CACD,CAFD,IAEO,IAAID,SAAS,GAAK,MAAlB,CAA0B,CAC/BR,OAAO,CAACS,UAAD,CAAP,CACD,CAFM,IAEA,CACLP,YAAY,CAACO,UAAD,CAAZ,CACD,CACF,CAZD,CAcA,GAAME,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACL,CAAD,CAAO,CAC9BA,CAAC,CAACM,cAAF,GAEA,GAAI,CAACjB,aAAa,CAACE,KAAD,CAAd,EAAyB,CAACE,IAA9B,CAAoC,CAClCK,SAAS,CAAC,0BAAD,CAAT,CACA,OACD,CACDS,KAAK,iBAAUd,IAAV,EAAL,CAEAC,OAAO,CAAC,EAAD,CAAP,CACAF,QAAQ,CAAC,EAAD,CAAR,CACAI,YAAY,CAAC,EAAD,CAAZ,CACD,CAZD,CAcA,mBACE,oCACE,8BAAUH,IAAV,GADF,cAEE,cAAM,SAAS,CAAC,MAAhB,wBACE,cACE,KAAK,CAAEF,KADT,CAEE,IAAI,CAAC,OAFP,CAGE,QAAQ,CAAEQ,iBAHZ,CAIE,IAAI,CAAC,OAJP,CAKE,WAAW,CAAC,OALd,EADF,cAQE,cACE,KAAK,CAAEN,IADT,CAEE,IAAI,CAAC,MAFP,CAGE,QAAQ,CAAEM,iBAHZ,CAIE,IAAI,CAAC,MAJP,CAKE,WAAW,CAAC,MALd,EARF,cAeE,cACE,KAAK,CAAEJ,SADT,CAEE,IAAI,CAAC,WAFP,CAGE,QAAQ,CAAEI,iBAHZ,CAIE,IAAI,CAAC,WAJP,CAKE,WAAW,CAAC,WALd,EAfF,cAsBE,eAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAEM,gBAA/B,oBAtBF,GAFF,CA0BGR,MAAM,eACL,kCACE,UAAG,SAAS,CAAC,YAAb,UAA2BA,MAA3B,EADF,EA3BJ,GADF,CAkCD,CAED,cAAeP,CAAAA,OAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { validateEmail } from '../../utils/helpers';\r\n\r\nfunction Contact() {\r\n  const [email, setEmail] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [textInput, setTextInput] = useState('');\r\n  const [errMsg, setErrMsg] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    const { target } = e;\r\n    const inputType = target.name;\r\n    const inputValue = target.value;\r\n\r\n    if (inputType === 'email') {\r\n      setEmail(inputValue);\r\n    } else if (inputType === 'name') {\r\n      setName(inputValue);\r\n    } else {\r\n      setTextInput(inputValue);\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateEmail(email) || !name) {\r\n      setErrMsg('Email or name is invalid');\r\n      return;\r\n    }\r\n    alert(`Hello ${name}`);\r\n\r\n    setName('');\r\n    setEmail('');\r\n    setTextInput('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>Hello {name}</p>\r\n      <form className=\"form\">\r\n        <input\r\n          value={email}\r\n          name=\"email\"\r\n          onChange={handleInputChange}\r\n          type=\"email\"\r\n          placeholder=\"email\"\r\n        />\r\n        <input\r\n          value={name}\r\n          name=\"name\"\r\n          onChange={handleInputChange}\r\n          type=\"text\"\r\n          placeholder=\"name\"\r\n        />\r\n        <input\r\n          value={textInput}\r\n          name=\"textInput\"\r\n          onChange={handleInputChange}\r\n          type=\"textInput\"\r\n          placeholder=\"textInput\"\r\n        />\r\n        <button type=\"button\" onClick={handleFormSubmit}>Submit</button>\r\n      </form>\r\n      {errMsg && (\r\n        <div>\r\n          <p className=\"error-text\">{errMsg}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;"]},"metadata":{},"sourceType":"module"}